// <auto-generated />
using LiftDataManager.Core.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LiftDataManager.Core.Migrations.SafetyComponentRecord
{
    [DbContext(typeof(SafetyComponentRecordContext))]
    [Migration("20251008072755_Add_SafetyComponentManfacturer")]
    partial class Add_SafetyComponentManfacturer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("LiftDataManager.Core.DataAccessLayer.SafetyComponentRecordModels.LiftCommission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LiftInstallerID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SAISEquipment")
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .HasColumnType("TEXT");

                    b.Property<int>("ZIPCode")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("LiftCommissions", (string)null);
                });

            modelBuilder.Entity("LiftDataManager.Core.DataAccessLayer.SafetyComponentRecordModels.SafetyComponentManfacturer", b =>
                {
                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .HasColumnType("TEXT");

                    b.Property<int>("ZIPCode")
                        .HasColumnType("INTEGER");

                    b.HasKey("Country");

                    b.ToTable("SafetyComponentManfacturers", (string)null);
                });

            modelBuilder.Entity("LiftDataManager.Core.DataAccessLayer.SafetyComponentRecordModels.SafetyComponentRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BatchNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdentificationNumber")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IncompleteRecord")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LiftCommissionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Release")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Revision")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SchindlerCertified")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LiftCommissionId");

                    b.ToTable("SafetyComponentRecords", (string)null);
                });

            modelBuilder.Entity("LiftDataManager.Core.DataAccessLayer.SafetyComponentRecordModels.SafetyComponentRecord", b =>
                {
                    b.HasOne("LiftDataManager.Core.DataAccessLayer.SafetyComponentRecordModels.LiftCommission", "LiftCommission")
                        .WithMany("SafetyComponentRecords")
                        .HasForeignKey("LiftCommissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LiftCommission");
                });

            modelBuilder.Entity("LiftDataManager.Core.DataAccessLayer.SafetyComponentRecordModels.LiftCommission", b =>
                {
                    b.Navigation("SafetyComponentRecords");
                });
#pragma warning restore 612, 618
        }
    }
}

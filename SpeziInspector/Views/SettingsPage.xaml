<Page
    x:Class="SpeziInspector.Views.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:SpeziInspector.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:xaml="using:Microsoft.UI.Xaml"
    Style="{StaticResource PageStyle}"
    mc:Ignorable="d">
    <Page.Resources>
        <helpers:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
        <Style x:Name="ContentDialogButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="{ThemeResource AccentButtonForeground}" />
            <Setter Property="Background" Value="{ThemeResource AccentButtonBackground}" />
            <Setter Property="BackgroundSizing" Value="OuterBorderEdge" />
            <Setter Property="BorderBrush" Value="{ThemeResource AccentButtonBorderBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            AutomationProperties.AccessibilityView="Raw"
                            Background="{TemplateBinding Background}"
                            BackgroundSizing="{TemplateBinding BackgroundSizing}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="PointerOver">

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonBackgroundPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonBorderBrushPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonForegroundPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Pressed">

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonBackgroundPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonBorderBrushPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonForegroundPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Disabled">

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemChromeGrayColor}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonBorderBrushDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonForegroundDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                </VisualStateGroup>

                            </VisualStateManager.VisualStateGroups>
                        </ContentPresenter>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid
        Margin="5"
        Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}"
        CornerRadius="10">
        <StackPanel x:Name="ContentArea" Margin="10,5,10,5">
            <TextBlock x:Uid="Settings_Personalization" Style="{ThemeResource SubtitleTextBlockStyle}" />
            <StackPanel Margin="{StaticResource SmallTopBottomMargin}">
                <TextBlock x:Uid="Settings_Theme" />

                <StackPanel Margin="{StaticResource XSmallTopMargin}">
                    <RadioButton
                        x:Uid="Settings_Theme_Light"
                        Command="{x:Bind ViewModel.SwitchThemeCommand}"
                        FontSize="15"
                        GroupName="AppTheme"
                        IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Light, Mode=OneWay}">
                        <RadioButton.CommandParameter>
                            <xaml:ElementTheme>Light</xaml:ElementTheme>
                        </RadioButton.CommandParameter>
                    </RadioButton>
                    <RadioButton
                        x:Uid="Settings_Theme_Dark"
                        Command="{x:Bind ViewModel.SwitchThemeCommand}"
                        FontSize="15"
                        GroupName="AppTheme"
                        IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Dark, Mode=OneWay}">
                        <RadioButton.CommandParameter>
                            <xaml:ElementTheme>Dark</xaml:ElementTheme>
                        </RadioButton.CommandParameter>
                    </RadioButton>
                    <RadioButton
                        x:Uid="Settings_Theme_Default"
                        Command="{x:Bind ViewModel.SwitchThemeCommand}"
                        FontSize="15"
                        GroupName="AppTheme"
                        IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Default, Mode=OneWay}">
                        <RadioButton.CommandParameter>
                            <xaml:ElementTheme>Default</xaml:ElementTheme>
                        </RadioButton.CommandParameter>
                    </RadioButton>
                </StackPanel>
                <TextBlock Margin="0,10,0,0" Text="Adminmode" />
                <ToggleSwitch
                    x:Name="SwitchAdminmode"
                    Margin="0,5,0,5"
                    IsOn="{x:Bind ViewModel.Adminmode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    OffContent="Adminmode deaktiviert"
                    OnContent="Adminmode aktiviert">
                    <Interactivity:Interaction.Behaviors>
                        <Core:EventTriggerBehavior EventName="Toggled">
                            <Core:InvokeCommandAction Command="{x:Bind ViewModel.PinDialog}" CommandParameter="{x:Bind AdminModePasswortDialog}" />
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                </ToggleSwitch>
            </StackPanel>
            <TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Text="Beschreibung der App" />
            <StackPanel Margin="{StaticResource XSmallTopMargin}">
                <TextBlock
                    Margin="0,10,0,0"
                    Style="{ThemeResource BodyTextBlockStyle}"
                    Text="{x:Bind ViewModel.VersionDescription, Mode=OneWay}" />
                <TextBlock Margin="0,10,0,0" Style="{ThemeResource BodyTextBlockStyle}">
                    Anwendung zum schnellen überprüfen und bearbeiten der AutoDeskTranfer.xml Datei.<LineBreak />
                    Das Speichern der geänderten Daten ist nur im Adminmode möglich.</TextBlock>
                <TextBlock
                    Margin="0,10,0,0"
                    Style="{ThemeResource BodyTextBlockStyle}"
                    Text="©Buchholz Roland" />
            </StackPanel>
        </StackPanel>
        <ContentDialog
            x:Name="AdminModePasswortDialog"
            Title="Admin Mode aktivieren"
            MaxWidth="{Binding ActualWidth, ElementName=pageRoot}"
            VerticalAlignment="Stretch"
            Background="{ThemeResource SystemChromeLowColor}"
            IsPrimaryButtonEnabled="{x:Bind ViewModel.CanSwitchToAdminmode, Mode=OneWay}"
            PrimaryButtonStyle="{StaticResource ContentDialogButtonStyle}"
            PrimaryButtonText="OK"
            SecondaryButtonStyle="{StaticResource ContentDialogButtonStyle}"
            SecondaryButtonText="Cancel">
            <StackPanel>
                <StackPanel Margin="40,10,10,10" Orientation="Horizontal">
                    <FontIcon
                        Margin="10"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontFamily="{StaticResource SymbolThemeFontFamily}"
                        FontSize="30"
                        Glyph="&#xE72E;" />
                    <PasswordBox
                        Width="120"
                        Margin="10"
                        Padding="20,5,20,5"
                        VerticalAlignment="Center"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        CornerRadius="10"
                        IsPasswordRevealButtonEnabled="True"
                        MaxLength="4"
                        Password="{x:Bind ViewModel.PasswortInput, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        PasswordRevealMode="Peek"
                        PlaceholderText="****" />
                </StackPanel>
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="12"
                    Foreground="Red"
                    Text="{x:Bind ViewModel.PasswortInfoText, Mode=OneWay}" />
                <StackPanel Margin="10" Orientation="Horizontal">
                    <SymbolIcon
                        Margin="0,10,0,10"
                        HorizontalAlignment="Left"
                        Symbol="ReportHacked" />
                    <TextBlock
                        Margin="10"
                        FontSize="12"
                        TextWrapping="Wrap">
                        Achtung im Adminmode können nicht validierte Parameter gespeichet werden.<LineBreak />
                        Die Parameter werden nicht auf Plausibilität geprüft.</TextBlock>
                </StackPanel>
                <Grid Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="25" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <CheckBox Grid.Column="0" IsChecked="{x:Bind ViewModel.AdminmodeWarningAccepted, Mode=TwoWay}" />
                    <TextBlock
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        FontSize="12"
                        Text="Ich verfüge über die Erfahrung Pamameter ohne Plausibilitätsprüfung zu ändern." />
                </Grid>
            </StackPanel>
        </ContentDialog>
    </Grid>
</Page>
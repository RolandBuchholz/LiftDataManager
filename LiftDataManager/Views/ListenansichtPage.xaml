<Page
    x:Class="LiftDataManager.Views.ListenansichtPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:collections="using:CommunityToolkit.Mvvm.Collections"
    xmlns:converters="using:CommunityToolkit.WinUI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:LiftDataManager.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:LiftDataManager.Core.Models"
    xmlns:speziControls="using:LiftDataManager.Controls"
    mc:Ignorable="d">

    <Page.Resources>
        <converters:BoolToObjectConverter
            x:Key="InvertBoolToObjectConverter"
            FalseValue="Visible"
            TrueValue="Collapsed" />
        <helpers:ParameterSeverityToBrushConverter x:Key="ParameterSeverityToBrushConverter" />
        <DataTemplate x:Key="ItemTemplate" x:DataType="models:Parameter">
            <Grid Height="60">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border
                    Grid.ColumnSpan="2"
                    Margin="-12,2,-10,2"
                    BorderBrush="YellowGreen"
                    BorderThickness="2"
                    CornerRadius="4"
                    Visibility="{x:Bind IsKey, Mode=OneWay}">
                    <Border.Background>
                        <SolidColorBrush Opacity="0.2" Color="YellowGreen" />
                    </Border.Background>
                </Border>
                <Border
                    Grid.ColumnSpan="2"
                    Margin="-12,2,-10,2"
                    BorderBrush="{x:Bind ParameterState, Converter={StaticResource ParameterSeverityToBrushConverter}}"
                    BorderThickness="2"
                    CornerRadius="4"
                    Visibility="{x:Bind HasErrors, Mode=OneWay}" />
                <FontIcon
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    FontSize="32"
                    Glyph="{x:Bind Symbol}" />
                <StackPanel
                    Grid.Column="1"
                    Margin="{StaticResource SmallLeftMargin}"
                    VerticalAlignment="Center">
                    <TextBlock Style="{StaticResource ListTitleStyle}" Text="{x:Bind DisplayName}" />
                    <TextBlock Style="{StaticResource ListSubTitleStyle}" Text="{x:Bind TypeCode}" />
                </StackPanel>
            </Grid>
        </DataTemplate>
    </Page.Resources>
    <Grid x:Name="ContentArea">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <!--  CommandBar  -->
            <speziControls:CommandBar
                x:Name="ListViewCommandBar"
                Grid.Row="0"
                Grid.Column="0"
                Margin="0,0,0,5"
                CanShowErrorsParameters="{x:Bind ViewModel.HasErrors, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                CanShowHighlightedParameters="{x:Bind ViewModel.HasHighlightedParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                CanShowUnsavedParameters="{x:Bind ViewModel.CanShowUnsavedParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                ItemSource="{x:Bind ViewModel.ParameterDictionary, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                SaveAllCommand="{x:Bind ViewModel.SaveAllParameterCommand}"
                SearchInput="{x:Bind ViewModel.SearchInput, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                SelectedFilter="{x:Bind ViewModel.SelectedFilter, Mode=OneWay}"
                ViewSource="{x:Bind ViewModel.GroupedItems, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ListView
                    ItemTemplate="{StaticResource ItemTemplate}"
                    ItemsSource="{x:Bind ViewModel.GroupedItems.View, Mode=OneWay}"
                    SelectedItem="{x:Bind ViewModel.Selected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    SelectionChanged="ListView_SelectionChanged">
                    <ListView.GroupStyle>
                        <GroupStyle HidesIfEmpty="True">
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate x:DataType="collections:IReadOnlyObservableGroup">
                                    <TextBlock
                                        FontSize="24"
                                        Foreground="{ThemeResource SystemControlHighlightAccentBrush}"
                                        Text="{x:Bind Key}" />
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </ListView.GroupStyle>
                </ListView>
                <speziControls:ParameterDetailControl
                    Grid.Column="1"
                    Margin="0,5,0,0"
                    LiftHistoryEntrys="{x:Bind ViewModel.ParameterHistoryEntrys, Mode=TwoWay}"
                    ListDetailsMenuItem="{x:Bind ViewModel.Selected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    SaveCommand="{x:Bind ViewModel.SaveParameterCommand}"
                    Visibility="{x:Bind ViewModel.IsItemSelected, Mode=OneWay}" />
                <TextBlock
                    Grid.Column="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="36"
                    Foreground="{StaticResource SystemAccentColor}"
                    Text="Kein Parameter ausgewählt"
                    TextWrapping="WrapWholeWords"
                    Visibility="{x:Bind ViewModel.IsItemSelected, Converter={StaticResource InvertBoolToObjectConverter}, Mode=OneWay}" />
            </Grid>
            <!--  InfoSidebarPanel  -->
            <speziControls:SidebarPanel
                Grid.Row="1"
                Grid.Column="1"
                Margin="0,5,0,0"
                InfoCenterEntrys="{x:Bind ViewModel.InfoCenterEntrys, Mode=OneWay}"
                InfoCenterIsOpen="{x:Bind ViewModel.InfoCenterIsOpen, Mode=TwoWay}"
                ShowQuickLinks="{x:Bind ViewModel.AuftragsbezogeneXml, Mode=OneWay}" />
        </Grid>
        <!--  Footer  -->
        <speziControls:FooterControl
            Grid.Row="2"
            Margin="0"
            CheckOut="{x:Bind ViewModel.CheckOut, Mode=OneWay}"
            ErrorsDictionary="{x:Bind ViewModel.ParameterErrorDictionary, Mode=TwoWay}"
            HasErrors="{x:Bind ViewModel.HasErrors, Mode=OneWay}"
            HideInfoErrors="{x:Bind ViewModel.HideInfoErrors, Mode=TwoWay}"
            ParameterFound="{x:Bind ViewModel.ParameterDictionary.Count, Mode=OneWay}"
            XmlPath="{x:Bind ViewModel.FullPathXml, Mode=OneWay}" />
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <!--  641 is the default CompactModeThresholdWidth in NavigationView  -->
                        <!--<AdaptiveTrigger MinWindowWidth="641" />-->
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ListDetailsViewControl.ListHeaderTemplate" Value="{StaticResource ListHeaderTemplate}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
